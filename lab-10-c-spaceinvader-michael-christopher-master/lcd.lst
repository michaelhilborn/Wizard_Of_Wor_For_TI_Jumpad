


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         
    5 00000000         ; Runs on LM4F120/TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these LCD
                       _WriteCommand and LCD_WriteData
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000         
   23 00000000 40004100 
                       DC      EQU              0x40004100
   24 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   25 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   26 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   27 00000000 00000004 
                       SSI_SR_RNE
                               EQU              0x00000004  ; SSI Receive FIFO 
                                                            Not Empty
   28 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   29 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   30 00000000         
   31 00000000                 EXPORT           writecommand
   32 00000000                 EXPORT           writedata
   33 00000000         
   34 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   35 00000000                 THUMB
   36 00000000                 ALIGN
   37 00000000         
   38 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is



ARM Macro Assembler    Page 2 


   39 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   40 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   41 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   42 00000000         ; lot of data, the FIFOs are not used when writing
   43 00000000         ; commands, and they are used when writing data.  This
   44 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   45 00000000         ; that is actually being transmitted.
   46 00000000         ; The write command operation waits until all data has b
                       een
   47 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   48 00000000         ; the command, and then waits for the transmission to
   49 00000000         ; finish.
   50 00000000         ; The write data operation waits until there is room in 
                       the
   51 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   52 00000000         ; and then adds the data to the transmit FIFO.
   53 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   54 00000000         ; the SSI0 module is not initialized and enabled.
   55 00000000         
   56 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   57 00000000         ; Input: R0  8-bit command to transmit
   58 00000000         ; Output: none
   59 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   60 00000000         writecommand
   61 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   62 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   63 00000000         ;3) Clear D/C=PA6 to zero
   64 00000000         ;4) Write the command to SSI0_DR_R
   65 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   66 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   67 00000000         
   68 00000000         
   69 00000000 B430            PUSH{R4,R5}                  ;
   70 00000002         
   71 00000002 4C12            LDR              R4, = SSI0_SR_R ;
   72 00000004 6825    CHECK   LDR              R5,[R4]     ;
   73 00000006 F005 0510       AND              R5, #0x10   ;
   74 0000000A 2D10            CMP              R5, #0x10   ;
   75 0000000C D0FA            BEQ              CHECK       ;
   76 0000000E         
   77 0000000E 4C10            LDR              R4, = DC    ;
   78 00000010 F04F 0500       MOV              R5, #0      ;
   79 00000014 6025            STR              R5,[R4]     ;
   80 00000016 BF00            NOP
   81 00000018 BF00            NOP
   82 0000001A         
   83 0000001A 4C0E            LDR              R4,=SSI0_DR_R ;
   84 0000001C 6020            STR              R0,[R4]     ;



ARM Macro Assembler    Page 3 


   85 0000001E         
   86 0000001E 4C0B            LDR              R4, = SSI0_SR_R ;
   87 00000020 6825    CHECK2  LDR              R5,[R4]     ;
   88 00000022 F005 0510       AND              R5, #0x10   ;
   89 00000026 2D10            CMP              R5, #0x10   ;
   90 00000028 D0FA            BEQ              CHECK2      ;
   91 0000002A         
   92 0000002A BC30            POP{R4,R5}                   ;
   93 0000002C         
   94 0000002C 4770            BX               LR          ;   return
   95 0000002E         
   96 0000002E         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   97 0000002E         ; Input: R0  8-bit data to transmit
   98 0000002E         ; Output: none
   99 0000002E         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
  100 0000002E         writedata
  101 0000002E         ;1) Read SSI0_SR_R and check bit 1, 
  102 0000002E         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
  103 0000002E         ;3) Set D/C=PA6 to one
  104 0000002E         ;4) Write the 8-bit data to SSI0_DR_R
  105 0000002E         
  106 0000002E B430            PUSH{R4,R5}                  ;
  107 00000030 4C06    TNF_READ
                               LDR              R4,= SSI0_SR_R ;
  108 00000032 6825            LDR              R5,[R4]     ;
  109 00000034 F015 0502       ANDS             R5, #0x02   ;
  110 00000038 D0FA            BEQ              TNF_READ    ;
  111 0000003A 4C05            LDR              R4,= DC     ;
  112 0000003C F04F 0540       MOV              R5, #0x40   ;
  113 00000040 6025            STR              R5,[R4]     ;
  114 00000042         
  115 00000042 4C04            LDR              R4,= SSI0_DR_R ;
  116 00000044 6020            STR              R0,[R4]     ;
  117 00000046         
  118 00000046 BC30            POP{R4,R5}
  119 00000048         
  120 00000048 4770            BX               LR          ;   return
  121 0000004A         
  122 0000004A         
  123 0000004A         ;***************************************************
  124 0000004A         ; This is a library for the Adafruit 1.8" SPI display.
  125 0000004A         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  126 0000004A         ; ----> http://www.adafruit.com/products/358
  127 0000004A         ; as well as Adafruit raw 1.8" TFT display
  128 0000004A         ; ----> http://www.adafruit.com/products/618
  129 0000004A         ;
  130 0000004A         ; Check out the links above for our tutorials and wiring
                        diagrams
  131 0000004A         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  132 0000004A         ; interface (RST is optional)
  133 0000004A         ; Adafruit invests time and resources providing this ope
                       n source code,
  134 0000004A         ; please support Adafruit and open-source hardware by pu
                       rchasing



ARM Macro Assembler    Page 4 


  135 0000004A         ; products from Adafruit!
  136 0000004A         ;
  137 0000004A         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  138 0000004A         ; MIT license, all text above must be included in any re
                       distribution
  139 0000004A         ;****************************************************
  140 0000004A         
  141 0000004A 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  142 0000004C                 END                          ; end of file
              4000800C 
              40004100 
              40008008 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\lcd.d 
-o.\lcd.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\
Luminary --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 34 in file LCD.s
   Uses
      None
Comment: .text unused
CHECK 00000004

Symbol: CHECK
   Definitions
      At line 72 in file LCD.s
   Uses
      At line 75 in file LCD.s
Comment: CHECK used once
CHECK2 00000020

Symbol: CHECK2
   Definitions
      At line 87 in file LCD.s
   Uses
      At line 90 in file LCD.s
Comment: CHECK2 used once
TNF_READ 00000030

Symbol: TNF_READ
   Definitions
      At line 107 in file LCD.s
   Uses
      At line 110 in file LCD.s
Comment: TNF_READ used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 60 in file LCD.s
   Uses
      At line 31 in file LCD.s
Comment: writecommand used once
writedata 0000002E

Symbol: writedata
   Definitions
      At line 100 in file LCD.s
   Uses
      At line 32 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DC 40004100

Symbol: DC
   Definitions
      At line 23 in file LCD.s
   Uses
      At line 77 in file LCD.s
      At line 111 in file LCD.s

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 24 in file LCD.s
   Uses
      None
Comment: GPIO_PORTA_DATA_R unused
SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 25 in file LCD.s
   Uses
      At line 83 in file LCD.s
      At line 115 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 26 in file LCD.s
   Uses
      At line 71 in file LCD.s
      At line 86 in file LCD.s
      At line 107 in file LCD.s

SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 28 in file LCD.s
   Uses
      None
Comment: SSI_SR_BSY unused
SSI_SR_RNE 00000004

Symbol: SSI_SR_RNE
   Definitions
      At line 27 in file LCD.s
   Uses
      None
Comment: SSI_SR_RNE unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 29 in file LCD.s
   Uses
      None



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Comment: SSI_SR_TNF unused
7 symbols
345 symbols in table
